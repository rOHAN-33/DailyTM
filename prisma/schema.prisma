// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id
  name String
  email String @unique
  about String?
  industryType String
  role String
  country String
  workspaces WorkspaceMember[]
  image String?
  tasks Tasks[]
  activities Activities[]
  comments Comment[]
  subscription Subscription?

  onboardingCompleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Workspace{
  id String @id @default(uuid())
  name String
  description String?
  ownerId String?
  members WorkspaceMember[]
  projects Project[]
  inviteCode String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AccessLevel{
  OWNER 
  MEMBER 
  VIEWER
}

model WorkspaceMember{
  id  String @id @default (uuid())
  userId String
  User User @relation(fields: [userId], references[id], onDelete: Cascade)

  workspaceId String
  workspace Workspace  @relation(fields: [userId], references[id], onDelete: Cascade)


  accessLevel AccessLevel  @default(MEMBER)
  projectAccess ProjectAccess[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @unique([userId, workspaceId])
}


model Project{
  id String @id @default(uuid())
  name String
  description String?
  workspaceId String
  Workspace Workspace @relation(fields: [userId], references[id], onDelete: Cascade)

  tasks Tasks[]
  activities Activities[]
  comments Comment[]
  projectAccess ProjectAccess[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  documentation Documentation[]


  @unique([workspaceId])
}


model 
